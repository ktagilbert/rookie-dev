<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <!-- <title></title> -->
    <description></description>
    <link>ktgilbert.com//</link>
    <atom:link href="ktgilbert.com//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 15 Jul 2015 19:50:33 -0700</pubDate>
    <lastBuildDate>Wed, 15 Jul 2015 19:50:33 -0700</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Your first Bootstrap Project - (Part 2)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/wireframe.jpg&quot; alt=&quot;frameworks for web designers&quot; /&gt;
Yesterday, I showed you &lt;a href=&quot;/blog/bootstrapExample&quot;&gt;how to install and set up your first Bootstrap project&lt;/a&gt;. So today, I am going to go over the benefits of using the framework and will also introduce a few elements that I found the most useful.&lt;/p&gt;

&lt;h1 id=&quot;benefits-of-using-the-bootstrap-framework&quot;&gt;Benefits of using the Bootstrap framework&lt;/h1&gt;

&lt;p&gt;The fact is, Bootstrap is just one framework you can choose from. It looks nice, it speeds up the development process, and it comes with responsive elements to help make sure your site looks great across different platforms.&lt;/p&gt;

&lt;p&gt;These are all great features. Still, there are other frameworks to choose from. For example, I personally like &lt;a href=&quot;http://materializecss.com/&quot;&gt;Materialize&lt;/a&gt; by Google, &lt;a href=&quot;http://foundation.zurb.com/learn/about.html&quot;&gt;Foundation&lt;/a&gt;, and &lt;a href=&quot;http://getskeleton.com/&quot;&gt;Skeleton&lt;/a&gt;. Still, there is a reason Bootstrap seems to be the most popular framework out there.&lt;/p&gt;

&lt;h2 id=&quot;features-that-make-bootstrap-useful&quot;&gt;7 features that make Bootstrap useful&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;It pushes out new versions regularly to keep up with new compilers and versions of JavaScript.&lt;/li&gt;
  &lt;li&gt;It has official themes for dashboards, web apps, and marketing pages&lt;/li&gt;
  &lt;li&gt;The framework includes tons of built in components to save you time including glyphicons, dropdown menus, buttons, and nav bars (plus tons more!)&lt;/li&gt;
  &lt;li&gt;It includes a solution for pagination (which I think is super cool)&lt;/li&gt;
  &lt;li&gt;People love the fonts included with Bootstrap.&lt;/li&gt;
  &lt;li&gt;Probably the most useful aspect is that Bootstrap comes with a grid system and containers with uniform widths. The grid system helps remove many of the complications involved in creating layouts. Plus it’s fluid to make responsive design &lt;em&gt;super&lt;/em&gt; easy&lt;/li&gt;
  &lt;li&gt;It has a huge support community that will be able to help you answer most of your questions. This is especially awesome for those who choose Bootstrap as their first framework!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-process-of-learning-bootstrap&quot;&gt;The process of learning Bootstrap&lt;/h2&gt;
&lt;p&gt;To get started with Bootstrap, I really only had to become familiar with the different classes that would help me design my one page &lt;a href=&quot;https://github.com/ktagilbert/Bootstrap-Example&quot;&gt;example project&lt;/a&gt;. I just started by reading about the Bootstrap grid system and components. From there, it was easy to start building my site.&lt;/p&gt;

&lt;p&gt;There a ton of resources out there to help you learn these classes as well so I’m not going to try and cover everything you need to know about the framework. Instead, I’m just going to tell you about the elements that I think have the most common use cases.&lt;/p&gt;

&lt;h2 id=&quot;jumbotron&quot;&gt;1. Jumbotron&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/jumbotron.png&quot; alt=&quot;Jumbotron&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used the Jumbotron class to make my containers with blue backgrounds. Here’s an example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;jumbotron&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;left-li pull-left&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;half-width-img&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;assets/webDesign.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;right-li pull-right&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;half-width-txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text-center&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Thanks for visiting!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
          Artisan brooklyn selvage next level vegan. Farm-to-table whatever organic slow-carb,
          marfa butcher pinterest beard tumblr austin kombucha intelligentsia distillery pour-over. Try-hard letterpress
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here you can see that the Jumbotron class gave me a uniform and fluid container with pre-set padding so that any text or headers within the container aren’t just floating at the top left by default. That way all you have to do is include your headers and text. Then you can move on to the next part of your layout.&lt;/p&gt;

&lt;h2 id=&quot;containers&quot;&gt;2. Containers&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;div class=&quot;container-fluid&quot;&amp;gt;&lt;/code&gt; : a responsive container that spans the entire width of a window.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;div class=&quot;container&quot;&amp;gt;&lt;/code&gt; : a responsive fixed-width container.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;columns&quot;&gt;3. Columns&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/twoColumnLayout.png&quot; alt=&quot;Two Column Layout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Columns were my favorite elements. All you have to do to create columns with Bootstrap is use &lt;code&gt;&amp;lt;div class=&quot;col-md&quot;&amp;gt;&lt;/code&gt;. You also have to define a width for the column that all together adds up to 12. For example, if you want three columns you will use &lt;code&gt;&amp;lt;div class=&quot;col-md-4&quot;&amp;gt;&lt;/code&gt;. Likewise, two columns would be &lt;code&gt;&amp;lt;div class=&quot;col-md-12&quot;&amp;gt;&lt;/code&gt; and four columns would be &lt;code&gt;&amp;lt;div class=&quot;col-md-3&quot;&amp;gt;&lt;/code&gt;. For mobile layouts you can also use  the&lt;code&gt;&amp;lt;div class=&quot;col-sm&quot;&amp;gt;&lt;/code&gt; element or even &lt;code&gt;&amp;lt;div class=&quot;col-xs&quot;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is an example of the how to make the two column layout above:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;intro-content&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;col-lg-12 text-center&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome to my sample project&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/br&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;col-lg-4 col-lg-offset-2&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;margin-text&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Salvia aesthetic organic, trust fund man bun photo booth small batch cred heirloom
        chicharrones tacos pickled hashtag vegan quinoa. Typewriter sartorial twee, 90&amp;#39;s neutra art party mixtape
        keffiyeh kinfolk fixie DIY. Neutra bushwick everyday carry yuccie kale chips hashtag drinking vinegar portland.
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;col-lg-4&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;margin-text&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; Cold-pressed pour-over affogato +1 hella hammock. Leggings hammock +1 food truck,
        pour-over XOXO pabst letterpress offal migas. Kale chips disrupt cronut mumblecore irony. Photo booth blue
        bottle slow-carb, tumblr DIY health goth kogi butcher gochujang man braid readymade..
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;images&quot;&gt;4. Images&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/responsiveImgClass.png&quot; alt=&quot;Responsive Image Class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The framework also comes with image styling that I found particular useful. There are a few different image classes that may help you out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;img class=&quot;img-responsive&quot;&amp;gt;&lt;/code&gt; : will automatically adjust to different screen widths.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;img class=&quot;thumbnail&quot;&amp;gt;&lt;/code&gt; : will give you an image with a slight border.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;img class=&quot;img-circle&quot;&lt;/code&gt; : gives you a perfectly circular image so you don’t have to mess around with border-radius.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;glyphicons&quot;&gt;5. Glyphicons&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/glyphicon.png&quot; alt=&quot;Bootstrap Glyphicons&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Glyphicons are icons you can use for your site. Instead of pulling in a separate library, Bootstrap has done that work for you. To include an icon on your site, you will use an element that look like this: &lt;code&gt;&amp;lt;span class=&quot;glyphicon glyphicon-search&quot; aria-hidden=&quot;true&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;navbars&quot;&gt;6 Navbars&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/navBar.png&quot; alt=&quot;Bootstrap Navbar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With just the inclusions of &lt;code&gt;&amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;&lt;/code&gt; You can have a nav bar on your site. You just have to go in and create links from there. Plus, the Bootstrap navbars are responsive. They will collapse on mobile size screens and will toggle to a horizontal bar as a user’s viewport increases.&lt;/p&gt;

&lt;h2 id=&quot;starting-your-own-project&quot;&gt;Starting your own project&lt;/h2&gt;

&lt;p&gt;Alright! I would now say that you know enough about Bootstrap to start on your own project. Again, learning Bootstrap really just involves becoming familiar with the different classes unique to the framework. So once you can do that, you’ll be on your way to building your own site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading guys! And as always, let me know if you have any questions by leaving a comment below.&lt;/strong&gt; ALSO! I’d love to hear what your favorite framework is.&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Feb 2016 00:00:00 -0800</pubDate>
        <link>ktgilbert.com//blog/first-bootstrap-project-2</link>
        <guid isPermaLink="true">ktgilbert.com//blog/first-bootstrap-project-2</guid>
        
        
      </item>
    
      <item>
        <title>Your first Bootstrap Project - (Part 1)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/bootstrap.jpg&quot; alt=&quot;Bootstrap Tutorial&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before I start talking about Bootstrap, I have some big news. &lt;strong&gt;I was hired as an SEO Specialist/Web Developer a couple of weeks ago!&lt;/strong&gt; My new role marks the first time I feel comfortable enough to call myself a web developer (more on that later).&lt;/p&gt;

&lt;p&gt;Yet, once I started my new role I immediately wanted to beef up on a few things. My first priority was to become more comfortable with Bootstrap. Now I know, Bootstrap is &lt;em&gt;old news&lt;/em&gt; to many. Still, if you are new to web development, it can help to immerse yourself in a front-end framework. If anything the experience will show you how to quickly make a static site. Even better, you may even become more comfortable with common design patterns or methods of structuring your styles.&lt;/p&gt;

&lt;p&gt;Now, I had experimented with Bootstrap once before. I actually used it for my blog here for a few days just so I could see what it was all about. Though I decided to get rid of it in favor of learning how to layout out pages myself, the experience did teach me how to create a sticky footer. That alone was well worth the effort, believe me. The sticky footer problem was driving me pretty damn crazy.&lt;/p&gt;

&lt;p&gt;This time around I decided to just create a one page example project. First, I had to remember how to download and install Bootstrap though. For someone who is new to frameworks, it can be intimidating even to install a framework and include it in a project. At least it was for me when I first started back in July. So, I want to give you guys a little walkthrough on how to get started since it can be a little confusing.&lt;/p&gt;

&lt;h1 id=&quot;downloading-and-installing-bootstrap-336&quot;&gt;Downloading and Installing Bootstrap 3.3.6&lt;/h1&gt;

&lt;p&gt;To start on your own Bootstrap project, go to the &lt;a href=&quot;http://getbootstrap.com/getting-started/&quot;&gt;Bootstrap “getting started” page&lt;/a&gt;. Here you can click “download bootstrap”. After that, you’ll just follow the directions on the page to install it.&lt;/p&gt;

&lt;p&gt;First, I recommend installing bower and Grunt if you don’t already have them installed on your computer.
&lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; is just a package manager that helps you keep track all of your libraries, framework, etc . It just helps you make sure you install the right version of your packages and their dependencies.&lt;/p&gt;

&lt;p&gt;After that, you’ll go back into your terminal and install Grunt. The Bootstrap getting started page shows you how to do this as well. Yet, I ran into some errors while trying to install it. So if that happens to you, simply make sure you’re in your root directory and run the command &lt;code&gt;sudo npm install -g grunt-cli&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The sudo part is called &lt;em&gt;super user do&lt;/em&gt;. It basically lets you force commands by overriding security measures that could be causing your errors. In short, it lets you act as if you are the superuser on your computer. From there, you can continue on with the installation as usual.&lt;/p&gt;

&lt;p&gt;Grunt is important because it lets you run tests and will watch your changes as your work on your project. Plus, once you include a ‘config.yml’ file in the root of your project, it will let you serve up your project locally while you’re developing with the command &lt;code&gt;jekyll serve&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;Okay, now that you have bower and Grunt installed, go ahead and unzip your Bootstrap folder. You’ll see that it includes a bunch of minified CSS, JavaScript, and even some fonts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here, you can see why so many people use frameworks.&lt;/strong&gt; They just provide a bunch of styling for you right out of the box to make building a site a little easier and faster. Fair warning though: using Bootstrap did not speed up the development process for me at all! I am so used to creating my own layouts that having to out specify some of the built-in styles was pretty time consuming and frustrating. At the end though, I was happy with the results (which I’ll share here in a second).&lt;/p&gt;

&lt;p&gt;Now, all you have to do is copy the HTML below into your project’s index.html file. Then, you’ll be able to start your own Bootstrap site!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;IE=edge&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;width=device-width, initial-scale=1&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Bootstrap 101 Template&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Latest compiled and minified CSS --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;anonymous&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Latest compiled and minified JavaScript --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Bootstrap --&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- jQuery (necessary for Bootstrap&amp;#39;s JavaScript plugins) --&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Include all compiled plugins (below), or include individual files as needed --&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;integrity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crossorigin=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;anonymous&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Alright! You have bootstrap installed. Now, you can begin to create pages.&lt;/p&gt;

&lt;h2 id=&quot;my-bootstrap-example&quot;&gt;My Bootstrap Example&lt;/h2&gt;

&lt;p&gt;I started by making just a one page example. You can &lt;a href=&quot;https://github.com/ktagilbert/Bootstrap-Example&quot;&gt;checkout the project for yourself here&lt;/a&gt;. &lt;em&gt;And&lt;/em&gt; it looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/bootstrapExample2.jpg&quot; alt=&quot;Example bootstrap project&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;becoming-familiar-with-bootstrap&quot;&gt;Becoming familiar with Bootstrap&lt;/h2&gt;

&lt;p&gt;Okay, there are couple of things to know about Bootstrap before you get started. The first is that most of the styling you will do will be done in HTML Don’t worry, I’m not talking about inline styles. Bootstrap just has a bunch of classes with associated styles for you to use already.&lt;/p&gt;

&lt;p&gt;To get started, take a couple of hours to become familiar with the different classes you now have at your disposal &lt;a href=&quot;http://getbootstrap.com/css/&quot;&gt;by taking a look at Bootstrap’s CSS page&lt;/a&gt;. Then, explore the other pages the framework has for you on their &lt;a href=&quot;http://getbootstrap.com/customize/&quot;&gt;customize page&lt;/a&gt;. If you want to override any of the existing styles you see here, you’ll have to make a “styles.css” file in your css folder and include it in the head of your HTML. Then, you’ll have to out-specify the Bootstrap styling.&lt;/p&gt;

&lt;p&gt;Okay, I’ll leave you with the task of installing and exploring Bootstrap for today. &lt;strong&gt;Tomorrow, I’ll go more in depth on how I made my example project.&lt;/strong&gt; Stay tuned and thanks for reading guys!&lt;/p&gt;
</description>
        <pubDate>Sat, 20 Feb 2016 00:00:00 -0800</pubDate>
        <link>ktgilbert.com//blog/bootstrapExample</link>
        <guid isPermaLink="true">ktgilbert.com//blog/bootstrapExample</guid>
        
        
      </item>
    
      <item>
        <title>A Client Side Search Function Made with jQuery</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/searchFunction.jpg&quot; alt=&quot;Client side search function tutorial&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A few months ago, I wanted to make a search function for a site I was working on. I didn’t know where to start so I &lt;a href=&quot;http://www.rubberduckdebugging.com/&quot;&gt;rubber ducked the problem&lt;/a&gt;. My thought process went something like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I’ve seen search functions before. A LOT of them actually. Hmmmm! What do I like about the search functions that I have seen and used?&lt;/li&gt;
  &lt;li&gt;Well, they let me find posts that I have either read before and what to find again &lt;em&gt;or&lt;/em&gt; they let me discover new articles based on words that I predict will be in the post’s title.&lt;/li&gt;
  &lt;li&gt;I search by a post’s title and always have!&lt;/li&gt;
  &lt;li&gt;Okay, so I want to create a search function that will let a user find an article based on the words in that article’s title.&lt;/li&gt;
  &lt;li&gt;I also want to create my search function using the tools that I have at my disposal: SCSS, HTML, and JavaScript/jQuery. So, I guess it has to be a search function that runs totally on the browser.&lt;/li&gt;
  &lt;li&gt;I think that’s possible! I’m going to try it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;how-i-made-a-client-side-search-function&quot;&gt;How I made a client side search function&lt;/h1&gt;
&lt;p&gt;I went to my desk and called my fiance over to help me figure out what to do. Again, I needed to do some more rubber ducking and it usually helps me to talk out the problem with someone in order to get my thoughts in order. So we did some pair programming to figure out what to do:&lt;/p&gt;

&lt;p&gt;The first step was to create a search field that would allow a user to enter in a search term. This a simple, un-intimidating step that will help you get the ball rolling. All you need to know is some CSS and HTML to make your search field look and function they way you want it to.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is how we made ours using a search icon from &lt;a href=&quot;https://fortawesome.github.io/Font-Awesome/&quot;&gt;font-awesome&lt;/a&gt;:&lt;/strong&gt; (note: I ended up using the search function for this site as well so you can see it in action on &lt;a href=&quot;http://ktgilbert.herokuapp.com/&quot;&gt;my home page!&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;fa fa-search&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;search-text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;no-results&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Sorry, there are no results for that search. Try again?&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;post-list&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So you can see that we created a container for a search field in my “index.html” file. Next, I included a search icon from font awesome. Finally, I created a text input area where a user can type in a word that they want to search for. You’ll also notice that the input element is an ID because it a unique element with one purpose. Alright, totally simple! Here is the SCSS we used to make the search field look nice:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.search&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#search-text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;outline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;#no-results&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.fa-search&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;#666&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here, I have removed the outer glow of the text-field, set an adequate width for the input area, and have styled the font of the user’s input as well as the font for what will show up when there are no matching articles.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One note:&lt;/strong&gt; I’ve  also included “display: none” because right away I knew that I would add some jQuery later on to make the input field display after a user clicks on the icon. But I’ll get to that in a second. For now, let’s go into adding functionality to the search field.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-client-side-search-function-with-jquery&quot;&gt;Creating a client side search function with jQuery&lt;/h2&gt;
&lt;p&gt;Right now, the search field does next to nothing. A user can type in it and that’s all. So, now you are going to want to make it actually search for something. &lt;strong&gt;My fiance helped me figure out how to add some functionality to my search function using jQuery. Here’s what we came up with:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.fa-search&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// on click of search icon&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#search-text&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;toggle&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;700&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// make the search field&amp;#39;s width expand (aka reveal the search field slowly)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$articleTitles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.post-link&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchTerm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;$articleTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// search through each &amp;#39;.post-link&amp;#39; (aka the title of each post)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchTerm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// if index of the user&amp;#39;s input(aka. the string) is -1, that means the article does not match the search query&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.article&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//hide all articles that do not match the query&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.article&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;90%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&amp;#39;margin&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0 5%&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// else (if the string is greater -1)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.article&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// show the closest article in the search results&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.article&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&amp;#39;width&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;25%&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;&amp;#39;margin&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.article:hidden&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$articleTitles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//if no articles match the user&amp;#39;s input, then show &amp;quot;no results found&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#no-results&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#search-text&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;keydown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this essentially watches which keys on the keyboard a user enters into the search field.&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//if a user presses keyCode 8 (aka backspace/delete)&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchTerm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// if the user&amp;#39;s input doesn&amp;#39;t contain anything&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;searchTerm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchTerm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchTerm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// extract the character from index position -1&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#no-results&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//hide &amp;quot;show no result&amp;quot;&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//run search function&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;searchTerm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// search term = the value of the string that is generated from the user&amp;#39;s key presses.&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// run search function&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;some-more-info-about-the-jquery-methods-we-used-in-the-search-function&quot;&gt;Some more info about the jQuery methods we used in the search function:&lt;/h2&gt;
&lt;p&gt;We used some specific methods to help us create the search functionality. I had never heard of some of these methods before so I thought it would be worth it to tell you more about them:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://api.jquery.com/keydown/&quot;&gt;keydown():&lt;/a&gt; A shortcut for the &lt;code&gt;.on( &quot;keydown&quot;, handler);&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode&quot;&gt;String.fromCharCode():&lt;/a&gt; MDN explains that this method “returns a string created by using the specified sequence of Unicode values.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.w3schools.com/jsref/jsref_touppercase.asp&quot;&gt;toUpperCase():&lt;/a&gt; Transforms text to all capitalized letters. This helps prevent your code from breaking/prevents a user from having to worry about their input being case sensitive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf&quot;&gt;indexOf():&lt;/a&gt; Returns the index value of a character within a string. -1 will be returned is a value is not found.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.w3schools.com/jsref/jsref_substring.asp&quot;&gt;substring():&lt;/a&gt; Extracts certain characters from a string that you can dictate to the browser.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;take-away-lessons&quot;&gt;Take away lessons:&lt;/h2&gt;
&lt;p&gt;When I was tasked with creating this search function, I was overwhelmed. There are a TON of ways to make a search function. So that’s why &lt;strong&gt;I had to sit down and think about what I could make using only the tools that I had at my disposal.&lt;/strong&gt; The end result is a simple search function that does exactly what I need it to do.&lt;/p&gt;

&lt;p&gt;It’s not fancy. It’s not especially innovative. &lt;em&gt;But&lt;/em&gt; it works for my static blog and it accomplishes the function I need it do. And that’s totally fine. Plus, pair programming with my fiance helped me learn a bunch of cool new methods so I truly enjoyed the process of making this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading guys!&lt;/strong&gt; I hope this tutorial helps. Again, if you want to see the search function in action, just go to &lt;a href=&quot;http://ktgilbert.herokuapp.com/&quot;&gt;my home page&lt;/a&gt; and click the search icon. Also, let me know in the comments if you have any questions!&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Jan 2016 00:00:00 -0800</pubDate>
        <link>ktgilbert.com//blog/client-side-search-function</link>
        <guid isPermaLink="true">ktgilbert.com//blog/client-side-search-function</guid>
        
        
      </item>
    
      <item>
        <title>How I Customized My Jekyll Home Page Layout</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/jekyllDefaultSite.jpg&quot; alt=&quot;Default Jekyll Layout&quot; /&gt;
When you start work on your new &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll powered site&lt;/a&gt;, you’ll have a super clean layout to work with. It’s pretty awesome. But, if you want to make your site look a little different, you’ll need to make some customizations yourself. To get started, you can open your “index.html” file in the root of your repo to make some layout changes.&lt;/p&gt;

&lt;h1 id=&quot;customizing-your-jekyll-powered-home-page&quot;&gt;Customizing your Jekyll powered home page&lt;/h1&gt;

&lt;p&gt;At first, I didn’t know what I wanted layout wise for my home page. &lt;a href=&quot;/blog/UI&quot;&gt;(see my post here for more info on thinking about your UI Design before coding!)&lt;/a&gt; I tried a lot of different options resulting in weeks of work. In the end I didn’t like anything I tried out but hey, at least I got a lot of practice in SCSS out of the process. Yet, I  was &lt;em&gt;finally&lt;/em&gt; able to settle on &lt;strong&gt;a three column desktop layout to help display my posts they way I wanted to.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-1-creating-columns&quot;&gt;Step 1: Creating columns&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/threeColumnLayout.jpg&quot; alt=&quot;Three Column Blog Layout&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used &lt;a href=&quot;/blog/learning-flexbox&quot;&gt;flexbox properties&lt;/a&gt; to achieve my three column layout. I chose three columns because I wanted to stick with larger images to really showcase each post on my home page. Plus, I just thought that four columns looked too cluttered and boring. The four columns layout was reminiscent of a newspaper spread with two many articles on the page.&lt;/p&gt;

&lt;h2 id=&quot;heres-how-i-made-columns-using-flexbox&quot;&gt;Here’s how I made columns using flexbox:&lt;/h2&gt;

&lt;p&gt;I went into my “sass” folder and created a file called “style.scss” to help contain all of my custom style changes. (Note: I had to include this new stylesheet in the head of my site.) Here is what the SCSS looks like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.post-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;list-style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;flex-wrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.post-img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;hidden&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;.excerpt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;baseline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you don’t want to use flexbox, you can achieve the same effect using styled lists and &lt;a href=&quot;/blog/mediaquery&quot;&gt;media queries&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-2-including-post-excerpts-in-jekyll&quot;&gt;Step 2: Including post excerpts in Jekyll&lt;/h2&gt;
&lt;p&gt;Out of the box, a Jekyll site displays posts with the help of a post title and post link. But I wanted to include excerpts on my home page with the goal of getting more visitors to click on my posts. I mean, why spend hours writing blog articles if no one clicks on them, right? &lt;strong&gt;I learned that if you give vistors an idea of what they are going to read, they will typically be more apt to click on that post and continue reading if they like the content they’ve been shown already.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thankfully, Jekyll uses liquid templating to help you include dynamic features throughout your site. All you have to do is reference whatever file you want to include with a liquid tag. If you want, you can check out &lt;a href=&quot;http://jekyllrb.com/docs/templates/&quot;&gt;Jekyll’s documentation on liquid templating here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this case, I didn’t have to create any markup of my own. All I had to do was include some meta info for each of my posts. So, now each of my posts contain some neat meta info that I can reference in my markup:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
layout: post
title: &amp;quot;How I Customized My Jekyll Home Page Layout&amp;quot;
date: 2016-01-27 12:43:21
image: &amp;quot;jekyllDefaultSite.jpg&amp;quot;
excerpt: &amp;gt;
 Flex properties are just a way for you to position elements along a vertical and horizontal axis. They also help you proportion elements, which I think is super cool. All you have to do to get started is declare a flex container.
---&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-using-liquid-tags-to-include-images&quot;&gt;Step 3: Using liquid tags to include images&lt;/h2&gt;

&lt;p&gt;For a while I was cool with just having a post title, link to the post, and an excerpt in this three column layout. But, after a while I realized that all that text was &lt;em&gt;boring.&lt;/em&gt; A simple solution was to include some images.&lt;/p&gt;

&lt;p&gt;They’re a bunch of way to include images for each of your post but I went with what I think is the easiest option. &lt;strong&gt;In the same way that you can include excerpts with liquid tags, you can associate each of your posts with an image.&lt;/strong&gt; Just include “image” in your meta info and pair it with a file in your “assets” folder. Then, you’ll include your liquid tag in the “index.html” file. You can see how I’ve included an image for each of my post in the code snippet above.&lt;/p&gt;

&lt;h2 id=&quot;optimize-your-photos-for-the-web-first&quot;&gt;Optimize Your photos for the web first&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;PRO TIP: To make sure all of your images appear uniformly, make sure you give them a uniform width and height.&lt;/strong&gt; I resized all of my images in Photoshop as either 1300px by 750px or 650px by 375px (for smaller original images) and then clicked “save for web” when I was all done.&lt;/p&gt;

&lt;p&gt;When I save my photos I also like to make sure they load progressively and I adjust the quality of the photos to help reduce the image’s file size (this will reduce your image’s load time!). &lt;a href=&quot;http://madefreshly.com/blog/howto/how-to-properly-optimize-images-for-web-in-photoshop/&quot;&gt;Here’s some more info on optimizing photos.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once my images were in place, I was finally happy with my home page! Believe me, it took months to get my site to look exactly how I wanted it to. Of course, that was my own fault for not mocking up a design before implementing layouts. Plus, I think I spent two whole days just learning how to associate my posts with an image. In the end though, the time was well worth it and I ended up learning a ton.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let me know how your layouts turns out and if you have any questions, feel free post it in the comments below.&lt;/strong&gt; Thanks for reading guys!&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2016 04:43:21 -0800</pubDate>
        <link>ktgilbert.com//blog/creating-custom-jekyll-homepage</link>
        <guid isPermaLink="true">ktgilbert.com//blog/creating-custom-jekyll-homepage</guid>
        
        
      </item>
    
      <item>
        <title>Learning About Flexbox (And Why It&#39;s a Great Tool)</title>
        <description>&lt;p&gt;Before I begin telling you about flexbox properties, I want to fill you in on a debate surrounding the tool. When I first started learning about web development, the internet told me not to use flexbox. People were ADAMANT that flexbox was not the best tool to use because modern browsers didn’t support it and there were other tools to use to achieve the same layout results. I saw the rants on reddit and I believed them without doing any research of my own.&lt;/p&gt;

&lt;p&gt;Then, when I was working on my about page, I found myself wrestling with absolute positioning, z-index, and clear properties. It was a huge pain that involved &lt;em&gt;way&lt;/em&gt; too many lines of css. So, I reconsidered my uninformed stance on flexbox. I pulled up a new tab and began researching which browsers supported flex properties (btw, this is what I should have done in the first place!).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In a couple of seconds I found that 95.31% of browsers support flexbox properties.&lt;/strong&gt; Wow, okay, that’s good. AND, because my targeted audience are a bunch of awesome nerds who mostly use Chrome, I quickly decided that I could overlook that remaining 5.69% because I’m pretty sure those who use IE 8 or 9 won’t be visiting my blog anytime soon….or ever.&lt;/p&gt;

&lt;h1 id=&quot;what-browsers-support-flexbox&quot;&gt;What browsers support flexbox:&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/canIUseFlexbox.png&quot; alt=&quot;What Browsers Support FlexBox?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I go to &lt;a href=&quot;http://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt; to see which browsers and operating systems will/will not support different methods or tools. A quick search on their site showed me exactly which browsers would not be compatible with flexbox properties. &lt;strong&gt;Here is what I found:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Android does not support the flex-wrap property and I must use the -webkit preface if I went to use other flexbox properties.&lt;/li&gt;
  &lt;li&gt;Internet Explore only supports 2012 syntax&lt;/li&gt;
  &lt;li&gt;IE 8 and 9 do not support flexbox at all.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;using-analytics-to-help-determine-which-tools-to-use&quot;&gt;Using analytics to help determine which tools to use&lt;/h2&gt;

&lt;p&gt;To see if I could go forward with using flexbox properties, I took a look at my Google Analytics page to see which browsers my visitors typically use. &lt;strong&gt;A quick look under the Technology tab told me that 0% of my visitors use Internet Explore and around 14% use Android.&lt;/strong&gt; That told me that I would only need to consider the -webkit prefix moving forward and find a work around for flex-wrap. No problem!&lt;/p&gt;

&lt;h2 id=&quot;the-lesson-to-be-learned&quot;&gt;The Lesson to be learned&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?text=Learning About Flexbox (And Why It&#39;s a Great Tool) url=http://bit.ly/1Sn3ppa &amp;amp;via=KT_a_Gilbert&quot;&gt;&lt;img src=&quot;/assets/webDevTip1.jpg&quot; alt=&quot;Learning About New Web Development Tools&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wanted to tell you all of this before teaching you about flex properties because I learned two awesome lessons here:&lt;/p&gt;

&lt;p&gt;1) You should always research new tools yourself before believing what anyone else has to say about them.&lt;/p&gt;

&lt;p&gt;2) Take the time to see which browsers and operating systems will support any new tools or methods you want to use before going ahead and using them. A quick look at Google Analytics will then tell you what accommodations you’ll need to make for your users.&lt;/p&gt;

&lt;h2 id=&quot;learning-about-flex-properties&quot;&gt;Learning about Flex Properties&lt;/h2&gt;

&lt;p&gt;Flex properties are just a way for you to position elements along a vertical and horizontal axis. They also help you proportion elements, which I think is super cool. All you have to do to get started is declare a flex container. Then, you declare flex-properties for your flex items. Here is some more info to help:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;&quot;&gt;Treehouse&lt;/a&gt; helps explain that flexbox just gives you a flexible way to layout page content that ends up taking less time and involves fewer changes to your markup.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Flex Containers:&lt;/strong&gt; These can be inline element such as a div, unordered list, or span element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flex items:&lt;/strong&gt; Flex items are anything inside of your flex containers. They are just your children elements.&lt;/p&gt;

&lt;p&gt;You first step will be to declare a flex container. It will look something like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.your-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That’s all there is to it! After that, you can think about how you want your flex items to behave. Do you want them to be inline elements? Or should they appear in a column? Should any be larger in width than others? What should happen to them on different screen sizes? These are all things that flexbox properties can help you figure out.&lt;/p&gt;

&lt;h2 id=&quot;get-flexible-with-flex-items&quot;&gt;Get flexible with flex items&lt;/h2&gt;
&lt;p&gt;When it comes to creating the layout you want, you’ll need to make a few more declarations to get things exactly how you want them. Here a few to get you started:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;flex-basis:&lt;/strong&gt; This one is my favorites! Flex-basis allows you to determine the proportions of your flex items. Instead of declaring set widths for elements that require multiple media queries at the bottom of your stylesheet to maintain, use flex-basis instead. You can set a length using rem, em, or a percentage to make a particular element bigger or smaller than the others around it.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#large-picture&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;flex-direction:&lt;/strong&gt; flex items run along the main axis (x) and cross axis (y). If you want to change this, declare a flex-direction in your flex container. Use row, row-reverse, column, or column reverse. Row will give you inline elements and “column” will you give you…well, columns. If you want to flip which items appear first in your layout, then tack on “reverse” to make it happen.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.your-list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;flex-wrap:&lt;/strong&gt;
&lt;img src=&quot;/assets/flexWrap.png&quot; alt=&quot;example of flex-wrap&quot; /&gt;
 flex items, by default, all try to squeeze into one line. If you want them to wrap (say for different resolutions), you can use flex-wrap to make them move down to different lines as needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Okay, this should get you well on your way to using flexbox!! Thanks for reading guys. Remember, if you have any questions, leave a comment below.&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Jan 2016 04:43:21 -0800</pubDate>
        <link>ktgilbert.com//blog/learning-flexbox</link>
        <guid isPermaLink="true">ktgilbert.com//blog/learning-flexbox</guid>
        
        
      </item>
    
      <item>
        <title>How to Improve Your Copywriting Workflow</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/copywriter.jpg&quot; alt=&quot;Improve Your Copywriting Workflow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you are a marketing manager or working at a marketing agency, chances are that you have a ton of clients who all have the same deal going on. You’ll need to write some landing page copy for the sale for them. The good news is that you have freelance copy writers on hand to help you do it! Problem solved, right? Well, not exactly.&lt;/p&gt;

&lt;p&gt;The problem with many agencies is that they only have 5-10 freelancers on hand at any time. Meaning, each writer is pumping out around 10 or more versions of the same article for each sale or event that comes up.&lt;/p&gt;

&lt;p&gt;The traditional formula is to have that freelancer re-write an intro and conclusion for each version and update any location details. Don’t forget, they also have to look up each location, find landmarks to mention, get all the info correct, and copy-edit their article around 3 times once it is finished before turning back in a final product for you to review. Then, you’ll have someone on your staff edit it again. Once that is all done, you will finally publish it to the client’s site. Wow, just typing that was exhausting!&lt;/p&gt;

&lt;p&gt;We are all trying to accommodate Google, right? So we abide by these rules and end-up forcing our copywriters to write the same article over and again. In most cases the process works fine. &lt;em&gt;But is it really working well enough for you?&lt;/em&gt; Let’s think about where the process is potentially breaking down.&lt;/p&gt;

&lt;h1 id=&quot;the-three-things-that-may-be-breaking-your-copywriting-workflow&quot;&gt;The three things that may be breaking your copywriting workflow&lt;/h1&gt;

&lt;p&gt;1) You writers are becoming bored and burnt out by writing the same thing over and again. Meaning, they are becoming apathetic. Why? It’s not because they are lazy. &lt;strong&gt;It’s because they are being forced to do a monotonous task, which is naturally leading them toward disinterest.&lt;/strong&gt; The task is no longer creative but instead formulaic. More than that, once a writer has to do more than 5 of these at a time, they begin to skim rather than give your assignment the attention it deserves.&lt;/p&gt;

&lt;p&gt;2) You are missing deadlines because you have to keep going back to give your writer more instructions in order to get the copy you want.&lt;/p&gt;

&lt;p&gt;3) Your writers are too scared to tell you that your process isn’t working for them. The fear is that once they speak up, they will be replaced because of how many other content writers are out there that would be happy to take over for them.&lt;/p&gt;

&lt;p&gt;So to make your copywriting workflow actually work, some things need to happen. First, try asking yourself some questions. &lt;strong&gt;I suggest sitting down with a new document and thoroughly writing out your answers to the questions below so that you can see how to improve your process before even having to read this rest of this article.&lt;/strong&gt; OR, &lt;a href=&quot;/downloads/questionstoHelpYouImproveYourCopyWritingWorkflow.pdf&quot;&gt;download these questions here&lt;/a&gt; and save them for your next meeting!&lt;/p&gt;

&lt;h2 id=&quot;questions-to-help-you-improve-your-copywriting-workflow&quot;&gt;12 Questions to help you improve your copywriting workflow&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Are you giving your writers relevant persona information?&lt;/li&gt;
  &lt;li&gt;Are you providing your writers with a consistent style guide that is thorough?&lt;/li&gt;
  &lt;li&gt;Have you been expecting your writers to assume what they should be doing at any point during their assignment?&lt;/li&gt;
  &lt;li&gt;Did you ask your writers to read over some examples of content they should model their work after?&lt;/li&gt;
  &lt;li&gt;Are your writers actually reading the examples?&lt;/li&gt;
  &lt;li&gt;Do you check-in with your writers? Have you asked them how they are doing or to give you any feedback?&lt;/li&gt;
  &lt;li&gt;Are you making sure your writers feel valued?&lt;/li&gt;
  &lt;li&gt;Have you explained the specific goal of each writing assignment to you writers?&lt;/li&gt;
  &lt;li&gt;Do they know about your conversion needs?&lt;/li&gt;
  &lt;li&gt;Have they been told about the importance of effective CTA’s?&lt;/li&gt;
  &lt;li&gt;Have you told them what keywords to focus on?&lt;/li&gt;
  &lt;li&gt;Is there a clear, hard deadline in place for each stage of the assignment?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Okay, now that you have your answers, you can already begin to see where you could be making improvements in your workflow.&lt;/p&gt;

&lt;p&gt;I am asking you to do this small assignment because too often I have seen companies devalue their writers. The assumption is that anyone can write. This happens because employees at these companies already know the company voice. They have been around for a while and have read all of the marketing copy and company brochures. They could write a blog post or article in just one afternoon because they know all there is to know. So the assumption is that professional writers will have no problem completing the assignment either. There is also the assumption that writing is easy.&lt;/p&gt;

&lt;h2 id=&quot;these-two-assumptions-are-detrimental-for-your-business&quot;&gt;These two assumptions are detrimental for your business.&lt;/h2&gt;

&lt;p&gt;Here is why:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Your freelance writers know next to nothing about your company. On top of that, they are being paid to write not research. To them, it doesn’t make sense to waste their time reading your examples or memorizing the company voice if they are only going to be getting $20 to write a flawless blog post at the end of the day.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Writing is harder than you think it is. There’s a reason English, Journalism, and Creative Writing are whole fields of study. Professional writers have most likely spent four years in post-secondary classes learning about grammar, being quizzed on various style guides, formatting papers just right, and being critiqued on sentence structure and word choice. They have also read everything put in front of them from articles by Gloria Steinem to novels and plays by Chaucer, Melville, Hawthorne, Tolstoy, Shakespeare, Austen, you name it!! Some have even taken the GRE.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But now, they are being tasked with writing for you and they are finding that your task is much more difficult than the ones they had in school. &lt;strong&gt;It is more difficult because they are either not being given clear instructions OR they are not being given enough time or money to give you what you are looking for.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I can tell you from personal experience that each article I write for a client or franchise takes me around 4 hours to create. Even after four hours, my managers tell me to slow down at work so that I don’t miss any mistakes. Each time, I notice that around the 3rd article I edit, I stop caring. The same goes for when I’m the one copy editing these articles. Around the 10th time I read the same repeated phrase it’s almost as if I lose the ability to read carefully. My mind goes numb instead and I effectively become useless to my manager and my company. The process just breaks down and at the end of it all writers only earn about $20-$30 their time my time.&lt;/p&gt;

&lt;h2 id=&quot;heres-the-thing-your-content-is-super-important&quot;&gt;Here’s the thing: your content is SUPER important.&lt;/h2&gt;

&lt;p&gt;To fix the process, let’s remember that content is king right now! Meaning, you should be treating it like the king. It (and by extension your writers) should be your top priority as they are one of your most valuable resources. The best thing you can do to treat your content and your writers like kings is to give them all of the information you can to make their job perfectly clear and work to reduce their frustration during assignments. &lt;em&gt;So, go ahead, ask yourself those 12 questions at the beginning of this article to help yourself get better copy from your writers!&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;whats-the-solution&quot;&gt;What’s the solution?&lt;/h2&gt;

&lt;p&gt;The best solution I can offer you is to simply try hiring more writers. Get more team members in your department or find more qualified freelancer to contribute to copy-editing. Then, get multiple people to help copy edit. You can even delegate the task to your interns as well to help. &lt;strong&gt;But it really is important that you spread out assignments between more writers to avoid being handed mediocre copy.  Afterall, this copy is important to you and your client so why would you trust it to someone who is going to become a zombie after a certain word count or hour of work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another solution is to assign each a writer just one-three clients rather than 10-30 articles for one sale. That way, they will AT LEAST have different topics to write about and that will help fuel their interest and motivation.&lt;/p&gt;

&lt;p&gt;Now that you have two great solutions in front you, the best thing you can do moving forward is  to&lt;a href=&quot;/downloads/questionstoHelpYouImproveYourCopyWritingWorkflow.pdf&quot;&gt;download the 12 questions to help you improve your copywriting workflow&lt;/a&gt; and fill them out with your team. It will only take 15 minutes and save you whole days of work as you improve your workflow!&lt;/p&gt;

&lt;p&gt;Let me know what you think and thanks for reading guys!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/downloads/questionstoHelpYouImproveYourCopyWritingWorkflow.pdf&quot;&gt;&lt;img src=&quot;/assets/12Questions.png&quot; alt=&quot;12 Questions to Help You Improve Your Copywriting Workflow&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Dec 2015 08:32:21 -0800</pubDate>
        <link>ktgilbert.com//blog/content-workflow</link>
        <guid isPermaLink="true">ktgilbert.com//blog/content-workflow</guid>
        
        
      </item>
    
      <item>
        <title>An Intro to UI Design Basics</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/uxpic.jpg&quot; alt=&quot;Learning About UI Design&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A few days ago, I launched a new design for the blog here. I’m excited but also wanted to create a post about why the need for a re-design. If you have been following me for a while you will have noticed that my blog has gone through a few different looks. Here is why: one of the reasons I made this blog was because I wanted to work on a project that would help me learn and practice front-end web development. The site is a tool for me to experiment and learn with. One of the lessons I learned later -  after how to make a site and create a stylesheet - is how to implement a UI Design that works.&lt;/p&gt;

&lt;h1 id=&quot;what-is-ui-design&quot;&gt;What is UI Design?&lt;/h1&gt;
&lt;p&gt;UI design stands for user interface design. It entails creating an interface that works for your targeted user. If you are a UI Designer, you have to think about what your user is going to respond well to and create something that captures the purpose of your site. Here is a good quote that may help you understand better&lt;/p&gt;

&lt;h3 id=&quot;user-interface-ui-design-focuses-on-anticipating-what-users-might-need-to-do-and-ensuring-that-the-interface-has-elements-that-are-easy-to-access-understand-and-use-to-facilitate-those-actions-ui-brings-together-concepts-from-interaction-design-visual-design-and-information-architecture&quot;&gt;“User Interface (UI) Design focuses on anticipating what users might need to do and ensuring that the interface has elements that are easy to access, understand, and use to facilitate those actions. UI brings together concepts from interaction design, visual design, and information. architecture.”&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Some key concepts that go into creating a solid UI Design:&lt;/strong&gt;
- knowledge of color theory
- font choice
- readability
- consideration of how the site will look on different platforms/screen sizes
- use contrast
- use of spacing
- organization of content
- alignment of text, images, and inputs
- site navigation
- branding
- consistency
- purposeful page layout
- hierarchy of text&lt;/p&gt;

&lt;p&gt;I’m going to touch on a few of these components today to help you get on your way to designing a great site. I do want to note that I am not an expert but I do have a passion for UI Design. I formed my knowledge of UI Design just by drawing on a bunch of different experiences I’ve had. I knew a little bit about branding from my experience in marketing and I studied color theory during various art courses. Then, I realized I also knew what I know about typography, hierarchy, spacing, and readability from my days spent laying out newspapers. After that, I just used Google to help me learn more. &lt;strong&gt;So I am also sure that if you draw on your various experiences that you know a lot too! More than you would expect probably.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;color-theory&quot;&gt;Color theory&lt;/h2&gt;

&lt;p&gt;Great sites make great use of color. More importantly, they chose their colors for specific reasons. They seek to create a color palette that is harmonious, creates contrast, is vibrant,  elicits certain responses from users, and captures the purpose of the site. If you have taken any art class, you will have studied colors. If you can remember that class, you will probably recall that certain colors elicit certain responses.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/colortheory1.jpg&quot; alt=&quot;Color Theory&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/colortheory2.jpg&quot; alt=&quot;Color Theory Basics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So when you are working on a site, you can try thinking about how you want your users to react to the colors on the page. For example, if you have a site about sharing knowledge, you could try using a color palette that includes green, blue, black and white, or grey. For this blog, I stuck to shades of blue, black, white, grey, and orange. I chose these colors because I wanted to associate the site with knowledge while still incorporating some of my own personality which is a bit whimsical. I also wanted the content to be easily readable and to avoid colors that would be overwhelming.&lt;/p&gt;

&lt;h2 id=&quot;font-choice-readability&quot;&gt;Font choice/ Readability&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/creativemess.jpg&quot; alt=&quot;font pairing for web design&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When you begin to think about your fonts, I suggest spending some time on Google Fonts to find 2-3 that will work for your site.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pro tip: pairing a sans-serif fonts with a serif font will help provide balance.&lt;/li&gt;
  &lt;li&gt;Think about the color of your text. Will your combinations be harsh on the eyes? Will there be too much contrast? Think about what you like to read. Do you want black text on a white background or would grey text on a creamy background be better for your purpose?&lt;/li&gt;
  &lt;li&gt;Put some careful thought into how large or small you want your fonts to be. Remember, think about hierarchy. Take time to decide how large all of your headers will be and then decide on how large the paragraph text will be in relation.&lt;/li&gt;
  &lt;li&gt;Finally, consider how wide he content on your page is? Does it span the whole width of the screen without any margins? If so, you may want to spent some time reading &lt;a href=&quot;https://www.google.com/design/spec/material-design/introduction.html&quot;&gt;Google’s material design guidelines&lt;/a&gt; -  I found it super helpful!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;navigation&quot;&gt;Navigation&lt;/h2&gt;

&lt;p&gt;The first thing you should consider is how you want to your users to be able to navigate on your desktop site vs. your mobile site. Mobile v. Desktop definitely require different considerations! You can save the hamburger icon for your mobile site where space is limited (I learned this lesson the hard way!). You don’t need it for your desktop site because space isn’t an issue there. Instead, focus on creating a menu that is easy to find and use.&lt;/p&gt;

&lt;p&gt;Then, on mobile site you can think about simplifying things and strategically using your limited screen real estate. When you are working on the mobile design site, you can think about using a menu that slides down from an icon and then goes away when the user wishes to close it.&lt;/p&gt;

&lt;h2 id=&quot;consistency&quot;&gt;Consistency&lt;/h2&gt;

&lt;p&gt;Consistency is simple. Once, you have gone through and made all your initial design decisions go through them again. This time ask yourself if you use your colors consistently across the site. Then do the same for everything else you have decided on. Make sure your buttons all look the same. Make sure your icons are uniform. Make sure your margins are consistent. Make sure your hover effects are appropriately uniform. &lt;em&gt;Seriously, go through everything.&lt;/em&gt; There’s even a bonus for being consistent with your design elements - it will help you avoid repeating code (as long as you utilize the purpose of classes vs. id’s).&lt;/p&gt;

&lt;p&gt;Okay, these are just some of the basics I wanted to touch on. I hope that they will help you as you learn more about UI Design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The best lesson here is to design your site before creating it!&lt;/strong&gt; Don’t follow my lead and make 3 different designs for one site. I was dumb because I was new to everything. Instead, sit down with a sketch pad, PhotoShop,  or whatever else you want to use and think about how the site should look and function. Then make a plan and put it into action.&lt;/p&gt;

&lt;p&gt;Let me know how it goes!&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Oct 2015 05:26:00 -0700</pubDate>
        <link>ktgilbert.com//blog/UI</link>
        <guid isPermaLink="true">ktgilbert.com//blog/UI</guid>
        
        
      </item>
    
      <item>
        <title>Tutorial: Making a Responsive Navigation Bar</title>
        <description>&lt;p&gt;Earlier, I showed you &lt;a href=&quot;http://rookie-dev.herokuapp.com/2015/06/24/nav-bar.html&quot;&gt;how to make a nav bar from scratch using just HTML and CSS&lt;/a&gt;. I really believe creating a nav bar is a great first project for anyone learning about HTML and CSS/SCSS. Now, if you want to incorporate some jQuery into your site, you can take the project one step further with a nav bar that has some functionality.&lt;/p&gt;

&lt;p&gt;When I redesigned this blog my nav bar was the first thing I wanted to change. I had a simple, static navigation that was pretty boring. So I took a look at other sites and noticed that their nav bars changed colors as users scrolled down.&lt;/p&gt;

&lt;p&gt;Now, I didn’t want a nav bar that changed colors just for the fun of it. I wanted it to solve a problem I was having. I was really looking for a super clean, all white nav bar. Yet, when that same element reached some text or an image, the menu text overlapped and became unreadable. &lt;strong&gt;I realized that I needed the nav bar to change colors when it reached these elements.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the end, I was able to create a nav bar that changed colors when the user scrolled down to a certain element on the window. This is what I started out with.&lt;/p&gt;

&lt;h3 id=&quot;nav-bar-to-start-with&quot;&gt;Nav Bar to Start With&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/normalnavbar.png&quot; alt=&quot;Simple Nav Bar&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-approach-the-problem&quot;&gt;How to Approach the Problem&lt;/h1&gt;

&lt;p&gt;If you are looking to build a great, responsive nav bar that utilizes some jQuery here is how to start. First, you can navigate to where you are including your javascript. You can start by making sure you have a jQuery library included along with your other script tags. (I keep mine in my head.html file.)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, let’s review some of the markup you will need for this project.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Menu Item 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/menu-item2&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Menu Item 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu-item&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/menu-item3&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Menu Item 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here is some SCSS as well:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#menu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;brown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.menu-item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;list-style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Okay, now you have a static menu to work with.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;set-up-your-problem&quot;&gt;Set Up Your Problem&lt;/h2&gt;

&lt;p&gt;Next, you can start by commenting out what you will need to do to make the nav bar change colors. Commenting out the problem is a great first step in solving your problem. This method really helps prevent me from getting overwhelmed by a problem. Instead, I can just start by simply solving the first step and then go from there until the rest has been solved as well.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//desktop nav bar&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//when user scrolls&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//and they reach an element (first &amp;lt;p&amp;gt; tag &amp;amp;&amp;amp; first&amp;lt;h1&amp;gt; in my case)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//change #menu.css background color&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//change .menu-item color&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// else&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//#menu.css should have a transparent color&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//.menu-item.css should have color: #1D1E18 - brown&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So far, we know what we want our menu item to do. To solve it though, you can try and store some variables to make things a little easier. Here, you can store 3 sets of info:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;where a user will start their scrolling&lt;/li&gt;
  &lt;li&gt;When the nav bar should change color&lt;/li&gt;
  &lt;li&gt;What the offset will be&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scroll_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startchange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p:first&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startchange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Okay, now you can go in and fill in the rest of your commented out steps. First, you know that you are going to want an if/else statement. We know this because you have two case scenarios for your nav bar depending on where the user is scrolled to on the window. So we can write something that looks like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startchange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;scroll_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scroll_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#menu&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;background-color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#111&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.menu-item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#fff&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.menu-item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#fff&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll notice that at the beginning of my if statement, I used the or operator. You don’t have to include an or statement if you don’t need it.  I include it here because when I tested my nav bar I noticed that on my about page, the first element was actually an image. Meaning, I needed the nav to change to back to a white background with black text when it reached this image and when it reached the first &amp;lt;p&amp;gt; tags on a page.&lt;/p&gt;

&lt;p&gt;For you, it may help to look at your pages and see what elements your nav will hit first. It is likely that this will either be the first div tag or the first h1 tag. Either way, just make sure to include what element will indicate when a style change is needed at the beginning of your if statement.&lt;/p&gt;

&lt;p&gt;Next, you can write your else statement. The else statement will provide the css info you need to change when the menu goes back to it’s initial state at the top of a window. Now, you are not declaring what the menu will look like normally. Instead, the else statement will help your menu toggle back to its normal state if a user scrolls &lt;em&gt;back up&lt;/em&gt; to the top of the screen.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#menu&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;background-color&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.menu-item&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#1D1E18&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Now you’re done!&lt;/strong&gt; In the end, you will get a nav bar that changes state on scroll. It will look something like this:&lt;/p&gt;

&lt;h2 id=&quot;nav-bar-that-changes-on-scroll&quot;&gt;Nav Bar that Changes on scroll&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/responsiveNav.jpg&quot; alt=&quot;Responsive Nav Bar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alright, hope this helps guys! &lt;strong&gt;Let me know how your nav bar turns out. I’d love to see links to your end results.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Sep 2015 10:00:00 -0700</pubDate>
        <link>ktgilbert.com//blog/responsive-nav-bar</link>
        <guid isPermaLink="true">ktgilbert.com//blog/responsive-nav-bar</guid>
        
        
      </item>
    
      <item>
        <title>Breaking Into Web Development (In Small Steps)</title>
        <description>&lt;p&gt;It used to be that the words “computer programmer” conjured up memories for me of people in the math and science building of my university. They were the people who arrived 30 minutes before class to consult with each other on complex problems. They said things like “back face curling”, “code refactoring,” “data flow analysis, “and heuristic evaluation.” They also threw around words that sounded completely ridiculous to me (e.g unicorn, ruby gem, brain fuck, Boomerang, Emerald, etc.) What was I doing there? Waiting for my required Astronomy 101 course to start and browsing Pinterest on my phone. They were geniuses in my book.&lt;/p&gt;

&lt;p&gt;The thing is, yes, they were smart. They were computer science majors who were taking advanced calculus. They spent all their time reading computer science textbooks and solving algorithms. Yet, to be a computer programmer you don’t have to know advanced calculus, at least not to get started. You don’t even need a computer science degree (although more power to you if you have one!).&lt;/p&gt;

&lt;p&gt;If you really want to get into the field, it just requires some dedication and a willingness to learn as well as ask questions. &lt;strong&gt;I recommend reading this blog post to learn how I got the courage to get into web development and to see what skills to learn first. After that, you will hopefully be able to see that breaking into web development isn’t &lt;em&gt;that&lt;/em&gt; scary. as long as you tackle it in small steps.&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;moving-beyond-wordpress-to-create-my-first-project&quot;&gt;Moving beyond Wordpress To Create My First Project&lt;/h1&gt;

&lt;p&gt;I don’t know why your are interested in web development and I’m not going to assume I do. Maybe it is because you want to do something creative and you have a strong interest in tech already. Maybe, you have been in love with web development since you were a teenager (and in this case you probably know more about the subject than I do). Or, you are like me and arrived at the idea of pursuing web development a little later in life. I do know that getting into web development is intimidating. &lt;strong&gt;It shouldn’t be though!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For me, the moment I knew I wanted to be a front-end developer came one-month into unemployment. I had lost interest in much of my former career once I was no longer being paid to do it. Instead, I spent my days messing around with a Wordpress blog that I used to have. That is until the theme I was using had an update that turned my content into an enlarged, pixelated mess. (Has anyone ever had this happen to them before??)&lt;/p&gt;

&lt;h3 id=&quot;my-pixeleted-mess&quot;&gt;My Pixeleted Mess:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/pixelmess.png&quot; alt=&quot;Mobile UI Mock Up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I spent two weeks re-doing the site. The funny thing is working on the redesign was the most fun I had since being employed. I didn’t even mind that I was sitting at a kitchen table rather than a desk. I didn’t care that I wasn’t being paid to do the work. The work was just fun.&lt;/p&gt;

&lt;p&gt;Once the site was back to how I liked it, I was even a bit proud of what I had done. In fact, the site looked even better than before because I had found a way to inspect elements and figure out their selectors to make some custom changes of my own.&lt;/p&gt;

&lt;p&gt;I showed off my work to my S.O. at dinner once it was complete. I pulled the site up on my phone and asked him if he would take a look. He is a self-taught back-end developer who never ceases to impress me with all the cool things that he is able to do. Showing him my work was kind of intimidating to be honest because he really knows how sites should work and function. Yet, he was smiling when he saw what I had done. He then looked up at me and very carefully suggested that I go into front-end development.&lt;/p&gt;

&lt;p&gt;The thing is, I had been thinking about the same thing for months - ever since I learned how to fix site bugs at work. That was when I first began to study HTML and Markdown. Still, I wasn’t sure if I could be a front-end developer.&lt;/p&gt;

&lt;p&gt;I didn’t think that I was smart enough to do that. You see, I studied creative writing in college. From there, I thought that I was going to spend my adult life as a secretary or admin assistant while writing a novel during coffee fueled nights. Going into web development was something I had never thought that I could do. &lt;em&gt;It simply didn’t fit in with the idea I had been forming for myself.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;where-to-start---breaking-the-process-down-into-small-steps&quot;&gt;Where to start - breaking the process down into small steps&lt;/h2&gt;

&lt;p&gt;That night though I said good-bye to that idea because it just wasn’t working for me. Instead, My S.O. and I sat down together and went over some basic concepts. I learned about arrays, operators, and zero-based indexes in JavaScript. Then, we googled &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; together and my S.O. ran some commands to create a Jekyll powered static blog site that I could work on. &lt;strong&gt;It took us about three hours for me to see that I had it in me to learn a programming language &lt;em&gt;and&lt;/em&gt; that I had a means to create a site from scratch.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My task for the next day was to learn how to add new pages to the site and begin creating a design I liked. I had to learn how to select elements for manipulation in JavaScript, how to maintain clean, modular code, and how to out specify the base stylesheet included in the Jekyll directory. This was all kind of overwhelming.&lt;/p&gt;

&lt;p&gt;What helped was focusing on one task at a time. For example, if I could just learn what the DOM was before learning how to traverse it, I could prevent a panic attack. This approach helped A LOT! I started off by learning three basic skills. HTML, CSS, and JavaScript.&lt;/p&gt;

&lt;p&gt;It may help you to take this same approach. &lt;strong&gt;Here are some steps to help you get started!&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;note-you-can-learn-these-in-whatever-order-you-wantneed&quot;&gt;Note: You can learn these in whatever order you want/need.&lt;/h4&gt;

&lt;h2 id=&quot;step-one-make-a-github-account&quot;&gt;Step One: Make a GitHub account&lt;/h2&gt;

&lt;p&gt;If you want to begin a project of your own, I first suggest you make a GitHub account. Someone once told me “GitHub or get out.” They meant, you need to have a GitHub account before an interviewer will take you seriously. It’s smart advice. Having a GitHub account helps employers know that you have worked on a project before, that you know a little something about &lt;a href=&quot;https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control&quot;&gt;version control&lt;/a&gt;, and that you’re interested in what others in the development community are up to.&lt;/p&gt;

&lt;p&gt;Just go to &lt;a href=&quot;https://github.com/&quot;&gt;github.com&lt;/a&gt; and create an account. You can then create a new repository for the project you want to work on and go from there!&lt;/p&gt;

&lt;h2 id=&quot;step-two-learn-some-html&quot;&gt;Step Two: Learn Some HTML&lt;/h2&gt;

&lt;p&gt;HTML, or Hypertext Markup Language, is just a way to create a skeleton for how your site will look. For example, it will help you declare where headers will go and where certain blocks of content will be placed on your page. Here are some great steps to help you master it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Read up on how to write HTML:&lt;/strong&gt; &lt;a href=&quot;http://www.w3schools.com/html/default.asp&quot;&gt;W3Schools&lt;/a&gt; is a great first place to look!&lt;/li&gt;
  &lt;li&gt;Learn the difference between a div and a span: You can think of a div as a dividing element in your markup. It contains and divides certain sections of your layout. A span, on the other hand, is a way to group inline-elements in your document.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mess around with HTML to create your own custom layouts:&lt;/strong&gt; You can try by working on your own project or creating something in a &lt;a href=&quot;http://codepen.io/pen/&quot;&gt;codepen&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Harness the power of the list! Seriously, you can do a lot with lists when they are combined with CSS.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Learn how to indent properly:&lt;/strong&gt; Elements within element should be indented.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Just know that when someone says “show me your markup,”  - this just means show them your HTML file:&lt;/strong&gt; I’ll admit, I didn’t know this for a &lt;em&gt;long&lt;/em&gt; time!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-three-tackle-scss&quot;&gt;Step Three: Tackle SCSS&lt;/h2&gt;

&lt;p&gt;I recommend learning &lt;a href=&quot;http://rookie-dev.herokuapp.com/2015/07/20/sass.html&quot;&gt;SCSS&lt;/a&gt; first. It will make it easier when you are ready to switch to &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SASS&lt;/a&gt; (a very marketable skill).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Pull up a local version of your project and make changes in the browser:&lt;/strong&gt; This will help you identify your class and ID names. It will also help you better visualize what needs to be tweaked. This way, you can experiment with what some properties do. Seriously, sometimes I just experiment with properties until my layout does what I want it to do. Keep in mind that I always use W3 Schools to check that the solution I arrive is a sustainable/pragmatic choice before actually implementing it.&lt;/li&gt;
  &lt;li&gt;Look at other websites that you admire and dissect their source code. While you are at, find what you like about their site and try to implement those features yourself.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-four-get-started-with-javascript&quot;&gt;Step Four: Get Started With JavaScript&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Check out some great resources &lt;a href=&quot;http://rookie-dev.herokuapp.com/2015/08/05/resources.html&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Begin by learning about operators&lt;/strong&gt;: Operators are just ways to perform math or declare conditional statements.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dive into the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;Mozilla Developer Network&lt;/a&gt;:&lt;/strong&gt; Here, you can find out how to traverse your DOM and discover cool new methods!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Look into jQuery&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Add some events using jQuery to your website.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Solve some algorithms - &lt;a href=&quot;http://adriann.github.io/programming_problems.html&quot;&gt;(easy ones)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;THEN learn more advanced concepts&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;find a project that you want to implement using JavaScript&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-five-learn-some-git-commands&quot;&gt;Step Five: Learn Some Git Commands&lt;/h2&gt;

&lt;p&gt;Yes, you need to know about version control. This is your first project, meaning you are most likely the only contributor. Yet, if you picture yourself working in web development, you will be working on a team and they will be using some kind of version control. Version control is a way to prevent people from erasing new implementations accidentally or stepping on each other’s toes during development. For Jekyll specific projects, you will really only need to know a few commands to test your site and make sure all of it’s features work properly. If you want to know some more though, I often reference this list &lt;a href=&quot;https://gist.github.com/hofmannsven/6814451&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;cd (change directory):&lt;/strong&gt; You need to let your command line know what files you will be working with. To do this, you cd into the correct directory. The directory will be the name of folder all of your project files are in.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;jekyll serve:&lt;/strong&gt; start up your local server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git check out &lt;em&gt;branch name&lt;/em&gt;:&lt;/strong&gt;  Switch to the branch you want to be working in.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git branch:&lt;/strong&gt; Find out what branch you are currently in.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git status:&lt;/strong&gt; See what files have been modified since your last commit.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git diff:&lt;/strong&gt; See what changes you have made to so far.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git add:&lt;/strong&gt; Add your changes to a new commit.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git commit -m “&lt;em&gt;insert message here indicating what you are committing”&lt;/em&gt;:&lt;/strong&gt; Commit your changes to your current branch.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;git push origin &lt;em&gt;branch name&lt;/em&gt;:&lt;/strong&gt; Push your changes to a live environment.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Okay, now you have some great steps to focus on. If you are like me, these steps will be able to help A LOT. A common problem I had while learning was not knowing what to do next. I wanted to make this post to help others avoid this problem. Once you have all of these steps mastered, we can talk about overcoming imposter syndrome! &lt;strong&gt;Thanks for reading guys!&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Sep 2015 10:00:00 -0700</pubDate>
        <link>ktgilbert.com//blog/breaking-into-web-development</link>
        <guid isPermaLink="true">ktgilbert.com//blog/breaking-into-web-development</guid>
        
        
      </item>
    
      <item>
        <title>Learning About Media Queries</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/mediaQuery.jpg&quot; alt=&quot;Learning about media queries&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Say you are working on a website and want it to look great across multiple devices. Meaning, you need your layout to look just as great on phones or tablets as it does on desktop. I mean you worked so hard to make it look wonderful on your desktop computer that you want everyone who sees it to appreciate your work no matter what they are viewing it on, right?&lt;/p&gt;

&lt;p&gt;Well, there are ways to do this. For example, you could use &lt;a href=&quot;&amp;quot;/2015/09/05/mediaquery.html&amp;quot;&quot;&gt;flex properties&lt;/a&gt;. Alternatively, a technique that many use are media queries. Media queries are something that I imagine you will always use, so it’s worth learning about them early on.&lt;/p&gt;

&lt;p&gt;First, let’s start thinking about your site’s layout. When thinking about a layout, you can start by thinking about the way it will look on a desktop.&lt;/p&gt;

&lt;h3 id=&quot;desktop-layout&quot;&gt;Desktop layout&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/rookiedevmockup.jpg&quot; alt=&quot;Mobile UI Mock Up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After your desktop layout is perfect, you will want to think about how that same site will look on a smaller screen. Ideally, you will think about the problem of a smaller screen before development. For example, you can think about how your layout will look on a mobile device. In the case of the blog here, I changed my home page from a three-column layout to a single layout and created a dropdown menu that I’ve indicated with a navicon. &lt;strong&gt;In development, you can make these layout changes with the help media queries.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;mobile-layout&quot;&gt;Mobile layout&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/rookiedevmobile.jpg&quot; alt=&quot;Mobile UI Mock Up&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-is-a-media-query&quot;&gt;What is a media query?&lt;/h1&gt;

&lt;p&gt;You can think of media queries as a tool that will let you change your layout when certain conditions apply (or at certain breakpoints). For example, what if you reduce your screen size to 760px and see that your two-column layout on your home page looks way to busy. Well, then you would want to include a rule in your stylesheet that says that when someone views your site at a screen width of 760px, your home page should change to a one-column layout. Now your home page looks much better. Awesome!&lt;/p&gt;

&lt;p&gt;To help you gain a grasp on what a media query looks like, you can checkout the example here.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;457px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;.page-heading&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;#line-one&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nf&quot;&gt;#line-two&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is an example of a media query I used to help make this blog’s logo. I made it to help make the surrounding div shrink once a user’s screen size reaches 457px or smaller. I reached the number 457 by basically shrinking my window until the logo and page-heading div looked ugly. That was my breakpoint and the width at which I needed to make a new rule within my stylesheet.&lt;/p&gt;

&lt;h2 id=&quot;when-to-use-a-media-query&quot;&gt;When to use a media query&lt;/h2&gt;
&lt;p&gt;I have found that while you are developing your site, you should consistently check how new features look at different screen sizes. If you find that a piece of your content looks ugly at a certain screen width, then you should either consider using a media query. &lt;strong&gt;Just remember to base your media query rules on how your content looks rather than on popular device widths.&lt;/strong&gt; If you base your rules on device widths, you will have to keep adding more and more rules as new products emerge. This can quickly lead to overly complex code and a lot of wasted time (which I know you don’t want).&lt;/p&gt;

&lt;p&gt;Yet, before you define a media query rule, it can also help to remember that many layout problems can be fixed by using more flexible measurement units. For example, using percentages &lt;a href=&quot;https://css-tricks.com/why-ems/&quot;&gt;or ems&lt;/a&gt; when it comes to defining font sizes. Yet, if your overall layout isn’t working at a certain screen width, well then you have encountered a breakpoint and should probably consider using a media query.&lt;/p&gt;

&lt;p&gt;A breakpoint is a point where your layout &lt;em&gt;breaks&lt;/em&gt;, indicating that your layout should change. You can see breakpoints in action by going to a site and seeing how the layouts alter at certain points. &lt;a href=&quot;https://css-tricks.com/&quot;&gt;CSS Tricks&lt;/a&gt; is a great example if you want to check it out. Simply make the screen at CSS Tricks smaller. You will notice that the sidebar on the right hand of the screen becomes thinner and thinner until it disappears completely at mobile-sized width. &lt;strong&gt;Each little micro-change in the CSS Tricks layout represents a breakpoint.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s look at the different kinds of media queries that you can use for your own project.&lt;/p&gt;

&lt;h2 id=&quot;max-width-and-min-width&quot;&gt;Max width and min width&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Here is a technical definition:&lt;/strong&gt; The width media feature describes the width of the rendering surface of the output device (such as the width of the document window, or the width of the page box on a printer).&lt;/p&gt;

&lt;p&gt;What this really means is that you can make a media query rule that determines what happens to your layout at a certain width. You can think of Min and Max as replacements for the ‘&amp;lt;’ and ‘&amp;gt;’ operators. You can see the Max width media query in action in my example above.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Min will change layouts when the change should occur at a length that is greater or equal to the pixel width you define.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Max width will apply at a width that is less than or equal to the width you define.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;portrait-and-landscape-properties&quot;&gt;Portrait and landscape properties&lt;/h2&gt;
&lt;p&gt;I am most excited about these properties! I just recently learned about portrait and landscape properties myself thanks to &lt;a href=&quot;http://teamtreehouse.com&quot;&gt;Treehouse&lt;/a&gt;. If you are making a mobile first design, then you probably want rules that will make your layout look great on smaller screen sizes. Well, if you have been considering breakpoints while implementing new features, then I am sure you will have this covered.&lt;/p&gt;

&lt;p&gt;Yet, what if your user wants to view your project in a landscape mode? For example, what will happen to your layout when a user rotates their phone or tablet? Well, you can make rules for these instances as well. You can see examples of the portrait and landscape properties in action over on &lt;a href=&quot;http://stephen.io/mediaqueries/&quot;&gt;Stephen Gilbert’s site here&lt;/a&gt;. In general, you can begin defining style rules following the syntax below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;portrait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;portrait&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;media-query-syntax&quot;&gt;Media query syntax&lt;/h2&gt;
&lt;p&gt;I bet you noticed that in the portrait and landscape example we used the word “and” as well as further specifiied our media query within a set of parentheses. One thing I have found is that if you are having trouble remembering how to write out a media query rule, you can draw on what you know about &lt;a href=&quot;http://www.w3schools.com/js/js_operators.asp&quot;&gt;operators&lt;/a&gt;. For example, if you want two rules that apply at once, you should use “and” in the same way you would use &amp;amp;&amp;amp; in JavaScript. You will even see that you can even write something with multiple specifications like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;handheld&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;15em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;where-to-learn-more&quot;&gt;Where to learn more&lt;/h2&gt;

&lt;p&gt;Okay, now I’ve shown you some key media query properties that you can use while working on your current or next project. I didn’t cover everything that can be done with media queries. There are still many other things you can do. For example, you could also consider color-index, aspect-ratio, and even other Mozilla specific media features. I’ll let you guys look into these yourself though &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries#Media_features&quot;&gt;over on MDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading guys! Hope this post helps.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Sep 2015 10:00:00 -0700</pubDate>
        <link>ktgilbert.com//blog/mediaquery</link>
        <guid isPermaLink="true">ktgilbert.com//blog/mediaquery</guid>
        
        
      </item>
    
  </channel>
</rss>
